import 'package:flutter/material.dart';

// –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ª—é–±–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞, –ª—É—á—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—Ç—å
final key = GlobalKey<_ColoredWidgetState>();

class FirstScreen extends StatelessWidget {
  const FirstScreen({
    Key? key,
  }) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: ColoredWidget(
          initalColor: Colors.red,
          child: Padding(
            padding: EdgeInsets.all(40),
            child: ColoredWidget(
              key: key,
              initalColor: Colors.green,
              child: const Padding(
                padding: EdgeInsets.all(40),
                child: ColorButton(),
              ),
            ),
          ),
        ),
      ),
    );
  }
}

class ColoredWidget extends StatefulWidget {
  final Color initalColor;
  final Widget child;

  const ColoredWidget({
    Key? key,
    required this.initalColor,
    required this.child,
  }) : super(key: key);

  @override
  State<ColoredWidget> createState() => _ColoredWidgetState();
}

class _ColoredWidgetState extends State<ColoredWidget> {
  late Color color;

  @override
  void initState() {
    color = widget.initalColor;
    super.initState();
  }

  void changeColor(Color color) {
    setState(() {
      this.color = color;
    });
  }

  @override
  Widget build(BuildContext context) {
    // –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –º—ã –ø–æ–ª—É—á–∞–µ–º
    // print('üî¥ ---> ${context.widget.runtimeType}');
    return Container(
      color: color,
      child: widget.child,
    );
  }
}

class ColorButton extends StatelessWidget {
  const ColorButton({Key? key}) : super(key: key);

  // void _onPressed(BuildContext context) {
  //   context
  //       // –º–µ—Ç–æ–¥ –ø—Ä–µ–¥–∫–∞, –≤–∏–¥–∂–µ—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞ —ç—Ç–∏–º, –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–µ–π—Ç
  //       .findAncestorStateOfType<_ColoredWidgetState>()
  //       ?.changeColor(Colors.pink);

  //   context
  //       // –º–µ—Ç–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º —Å—Ç–µ–π—Ç–æ–º
  //       .findRootAncestorStateOfType<_ColoredWidgetState>()
  //       ?.changeColor(Colors.yellow);
  // }

  @override
  Widget build(BuildContext context) {
    return const ColoredWidget(
      initalColor: Colors.blue,
      child: SomeWidget(),
    );
  }
}

// —Å–æ–∑–¥–∞–ª–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –∏ –º—ã –ø–æ–ª—å–∑—É–µ–º—Å—è –µ–≥–æ build
// –Ω–æ —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è Builder –≤ –Ω–µ–≥–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –≤–µ—Ä–Ω—É–ª–∏ –±—ã –≤–∏–¥–∂–µ—Ç –¥—Ä—É–≥–æ–π
class SomeWidget extends StatelessWidget {
  const SomeWidget({Key? key}) : super(key: key);

  void _onPressed(BuildContext context) {
    context
        // –º–µ—Ç–æ–¥ –ø—Ä–µ–¥–∫–∞, –≤–∏–¥–∂–µ—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞ —ç—Ç–∏–º, –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–µ–π—Ç
        .findAncestorStateOfType<_ColoredWidgetState>()
        ?.changeColor(Colors.pink);

    context
        // –º–µ—Ç–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º —Å—Ç–µ–π—Ç–æ–º
        .findRootAncestorStateOfType<_ColoredWidgetState>()
        ?.changeColor(Colors.yellow);

      // –º–µ—Ç–æ–¥—ã –≤–∏–¥–∂–µ—Ç–∞ –ø–æ –∫–ª—é—á—É, –Ω–æ –ª—É—á—à–µ –Ω–µ –¥–µ–ª–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      key.currentState?.changeColor(Colors.red);
  }

  @override
  Widget build(BuildContext context) {
    return Center(
      child: ElevatedButton(
        onPressed: () => _onPressed(context),
        child: const Text('–ù–∞–∂–º–∏'),
      ),
    );
  }
}